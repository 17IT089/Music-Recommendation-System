# -*- coding: utf-8 -*-
"""Music Recommendation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RW9ABbhb1cBSQEbBdIPdE6wtG1roLF30
"""

import pandas as pd

from google.colab import drive
drive.mount('/content/drive')

path = "/content/drive/My Drive/Music Recommendation/song_data.csv"

song_data = pd.read_csv(path,usecols=['user_id','song_id','listen_count','title','artist','song'],dtype={'user_id':'str','song_id':'str','listen_count':'int32','title':'str','artist':'str','song':'str'})
song_data.head(10)

song_data = song_data[['song','listen_count']]
song_data

song_data = song_data.groupby('song').sum()
song_data.sort_values(by=['listen_count'], inplace=True, ascending=False)
song_data = song_data.reset_index() 
song_data.head(10)

# function to recommend new songs
def Music_Recommendation(song_name, k):

  # to convert dataframe into array
  song_list = (song_data['song']).to_list() 

  # to check if song selected by user is available?
  if song_name in song_list :

    print("Song "+"'"+song_name+"'"+" is available")
    song_index = (song_list.index(song_name))

    # total listen count of the song which is selected by user
    song_listen_count = (song_data['listen_count'].iloc[song_index])
    new_distance_list = []

    for i in range(len(song_data)):
      if i != song_index :

        # calculate euclidean distance
        abs_distance = abs(song_listen_count - song_data['listen_count'][i])
        new_distance_list.append([abs_distance,song_data['song'][i]])

    # to sort distance list by ascending order     
    new_distance_list = sorted(new_distance_list)

    print("Top " + str(k) + " Recommendation for you.......")
    for i in range(k):
      print(i+1,")",new_distance_list[i][1])
    
      
  else:
     print("Song "+"'"+song_name+"'"+" is not available")
     print("Top " + str(k) + " Recommendation for you.......")
     recommend_song = song_data[['song']].head(k)
     for i in range(k):
      print(i+1,")",recommend_song['song'][i])

k = 10
Music_Recommendation('Trahison By Vitalic', k)